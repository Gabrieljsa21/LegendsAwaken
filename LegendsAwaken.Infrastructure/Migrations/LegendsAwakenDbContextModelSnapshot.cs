// <auto-generated />
using System;
using LegendsAwaken.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LegendsAwaken.Infrastructure.Migrations
{
    [DbContext(typeof(LegendsAwakenDbContext))]
    partial class LegendsAwakenDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("LegendsAwaken.Domain.Cidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("CapacidadeMaxima")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<int>("Nivel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Populacao")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Cidades");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Construcao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CidadeId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EstaAtiva")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Nivel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.ToTable("Construcao");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Heroi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Antecedente")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Classe")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInvocacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagemUrl")
                        .HasColumnType("TEXT");

                    b.Property<int>("Nivel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Raca")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Raridade")
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("Tags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ulong>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("XP")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Herois");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Inimigo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Habilidades")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Nivel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("TorreAndarId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TorreAndarId");

                    b.ToTable("Inimigo");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.PersonagemTrabalhador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CidadeId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("HeroiId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("InicioTrabalho")
                        .HasColumnType("TEXT");

                    b.Property<string>("Profissao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TerminoTrabalho")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.ToTable("PersonagemTrabalhador");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.TorreAndar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DificuldadeBoss")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Numero")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ObjetivoCumprido")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RecompensaQuantidade")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RecompensaTipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("TemBoss")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Andares");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Usuario", b =>
                {
                    b.Property<ulong>("DiscordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AndarMaisAlto")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("CidadeId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Cristais")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<int>("Fragmentos")
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("HeroisIds")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Moedas")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NivelConta")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PergaminhosSecretos")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UltimoLogin")
                        .HasColumnType("TEXT");

                    b.Property<int>("XP")
                        .HasColumnType("INTEGER");

                    b.HasKey("DiscordId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Cidade", b =>
                {
                    b.OwnsOne("LegendsAwaken.Domain.Recursos", "Recursos", b1 =>
                        {
                            b1.Property<Guid>("CidadeId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Comida")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Madeira")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Ouro")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Pedra")
                                .HasColumnType("INTEGER");

                            b1.HasKey("CidadeId");

                            b1.ToTable("Cidades");

                            b1.WithOwner()
                                .HasForeignKey("CidadeId");
                        });

                    b.Navigation("Recursos")
                        .IsRequired();
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Construcao", b =>
                {
                    b.HasOne("LegendsAwaken.Domain.Cidade", null)
                        .WithMany("Construcoes")
                        .HasForeignKey("CidadeId");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Heroi", b =>
                {
                    b.OwnsOne("LegendsAwaken.Domain.Equipamentos", "Equipamentos", b1 =>
                        {
                            b1.Property<Guid>("HeroiId")
                                .HasColumnType("TEXT");

                            b1.PrimitiveCollection<string>("Acessorios")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Arma")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Armadura")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Id")
                                .HasColumnType("INTEGER");

                            b1.HasKey("HeroiId");

                            b1.ToTable("Herois");

                            b1.WithOwner()
                                .HasForeignKey("HeroiId");
                        });

                    b.OwnsOne("LegendsAwaken.Domain.HabilidadeContainer", "Habilidades", b1 =>
                        {
                            b1.Property<Guid>("HeroiId")
                                .HasColumnType("TEXT");

                            b1.HasKey("HeroiId");

                            b1.ToTable("Herois");

                            b1.WithOwner()
                                .HasForeignKey("HeroiId");

                            b1.OwnsMany("LegendsAwaken.Domain.Habilidade", "Ativas", b2 =>
                                {
                                    b2.Property<Guid>("HabilidadeContainerHeroiId")
                                        .HasColumnType("TEXT");

                                    b2.Property<Guid>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("Descricao")
                                        .IsRequired()
                                        .HasColumnType("TEXT");

                                    b2.Property<bool>("EstaEmTreinamento")
                                        .HasColumnType("INTEGER");

                                    b2.Property<int>("Nivel")
                                        .HasColumnType("INTEGER");

                                    b2.Property<string>("Nome")
                                        .IsRequired()
                                        .HasColumnType("TEXT");

                                    b2.Property<int>("Tipo")
                                        .HasColumnType("INTEGER");

                                    b2.Property<int>("XPAtual")
                                        .HasColumnType("INTEGER");

                                    b2.Property<int>("XPMaximo")
                                        .HasColumnType("INTEGER");

                                    b2.HasKey("HabilidadeContainerHeroiId", "Id");

                                    b2.ToTable("Herois_Ativas");

                                    b2.WithOwner()
                                        .HasForeignKey("HabilidadeContainerHeroiId");
                                });

                            b1.OwnsMany("LegendsAwaken.Domain.Habilidade", "Passivas", b2 =>
                                {
                                    b2.Property<Guid>("HabilidadeContainerHeroiId")
                                        .HasColumnType("TEXT");

                                    b2.Property<Guid>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("Descricao")
                                        .IsRequired()
                                        .HasColumnType("TEXT");

                                    b2.Property<bool>("EstaEmTreinamento")
                                        .HasColumnType("INTEGER");

                                    b2.Property<int>("Nivel")
                                        .HasColumnType("INTEGER");

                                    b2.Property<string>("Nome")
                                        .IsRequired()
                                        .HasColumnType("TEXT");

                                    b2.Property<int>("Tipo")
                                        .HasColumnType("INTEGER");

                                    b2.Property<int>("XPAtual")
                                        .HasColumnType("INTEGER");

                                    b2.Property<int>("XPMaximo")
                                        .HasColumnType("INTEGER");

                                    b2.HasKey("HabilidadeContainerHeroiId", "Id");

                                    b2.ToTable("Herois_Passivas");

                                    b2.WithOwner()
                                        .HasForeignKey("HabilidadeContainerHeroiId");
                                });

                            b1.Navigation("Ativas");

                            b1.Navigation("Passivas");
                        });

                    b.OwnsOne("LegendsAwaken.Domain.Atributos", "Atributos", b1 =>
                        {
                            b1.Property<Guid>("HeroiId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Carisma")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Constituicao")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Destreza")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Forca")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Inteligencia")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Sabedoria")
                                .HasColumnType("INTEGER");

                            b1.HasKey("HeroiId");

                            b1.ToTable("Herois");

                            b1.WithOwner()
                                .HasForeignKey("HeroiId");
                        });

                    b.OwnsOne("LegendsAwaken.Domain.Status", "Status", b1 =>
                        {
                            b1.Property<Guid>("HeroiId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("ManaAtual")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("ManaMaxima")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("VidaAtual")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("VidaMaxima")
                                .HasColumnType("INTEGER");

                            b1.HasKey("HeroiId");

                            b1.ToTable("Herois");

                            b1.WithOwner()
                                .HasForeignKey("HeroiId");
                        });

                    b.OwnsOne("LegendsAwaken.Domain.Treinamento", "Treinamento", b1 =>
                        {
                            b1.Property<Guid>("HeroiId")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("Fim")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("Inicio")
                                .HasColumnType("TEXT");

                            b1.Property<string>("ResultadoEsperado")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Tipo")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("HeroiId");

                            b1.ToTable("Herois");

                            b1.WithOwner()
                                .HasForeignKey("HeroiId");
                        });

                    b.Navigation("Atributos")
                        .IsRequired();

                    b.Navigation("Equipamentos")
                        .IsRequired();

                    b.Navigation("Habilidades")
                        .IsRequired();

                    b.Navigation("Status")
                        .IsRequired();

                    b.Navigation("Treinamento");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Inimigo", b =>
                {
                    b.HasOne("LegendsAwaken.Domain.TorreAndar", null)
                        .WithMany("Inimigos")
                        .HasForeignKey("TorreAndarId");

                    b.OwnsOne("LegendsAwaken.Domain.Atributos", "Atributos", b1 =>
                        {
                            b1.Property<Guid>("InimigoId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Carisma")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Constituicao")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Destreza")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Forca")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Inteligencia")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Sabedoria")
                                .HasColumnType("INTEGER");

                            b1.HasKey("InimigoId");

                            b1.ToTable("Inimigo");

                            b1.WithOwner()
                                .HasForeignKey("InimigoId");
                        });

                    b.Navigation("Atributos")
                        .IsRequired();
                });

            modelBuilder.Entity("LegendsAwaken.Domain.PersonagemTrabalhador", b =>
                {
                    b.HasOne("LegendsAwaken.Domain.Cidade", null)
                        .WithMany("Trabalhadores")
                        .HasForeignKey("CidadeId");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Cidade", b =>
                {
                    b.Navigation("Construcoes");

                    b.Navigation("Trabalhadores");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.TorreAndar", b =>
                {
                    b.Navigation("Inimigos");
                });
#pragma warning restore 612, 618
        }
    }
}
