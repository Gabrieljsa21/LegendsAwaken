// <auto-generated />
using System;
using LegendsAwaken.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LegendsAwaken.Infrastructure.Migrations
{
    [DbContext(typeof(LegendsAwakenDbContext))]
    partial class LegendsAwakenDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("LegendsAwaken.Domain.Entities.Auxiliares.HeroiAfinidadeElemental", b =>
                {
                    b.Property<Guid>("HeroiId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Elemento")
                        .HasColumnType("INTEGER");

                    b.HasKey("HeroiId", "Elemento");

                    b.ToTable("HeroisAfinidades");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Entities.Auxiliares.HeroiTag", b =>
                {
                    b.Property<Guid>("HeroiId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tag")
                        .HasColumnType("TEXT");

                    b.HasKey("HeroiId", "Tag");

                    b.ToTable("HeroisTags");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Entities.Auxiliares.HeroiVinculo", b =>
                {
                    b.Property<Guid>("HeroiId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("VinculadoId")
                        .HasColumnType("TEXT");

                    b.HasKey("HeroiId", "VinculadoId");

                    b.ToTable("HeroisVinculos");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Entities.Banner.BannerHistorico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("BannerId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataUltimoReset")
                        .HasColumnType("TEXT");

                    b.Property<int>("QuantidadeInvocacoes")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("BannerHistorico");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Entities.Banner.BannerProgresso", b =>
                {
                    b.Property<ulong>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BannerId")
                        .HasColumnType("TEXT");

                    b.Property<int>("ChanceHumano")
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("OutrasChances")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProximoIndexCrescente")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuantidadeRolls")
                        .HasColumnType("INTEGER");

                    b.HasKey("UsuarioId", "BannerId");

                    b.ToTable("BannerProgressos");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Entities.Cidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("CapacidadeMaxima")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<int>("Nivel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Populacao")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Cidades");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Entities.Construcao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CidadeId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EstaAtiva")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Nivel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.ToTable("Construcao");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Entities.Habilidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EstaEmTreinamento")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("HeroiId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Nivel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("XPAtual")
                        .HasColumnType("INTEGER");

                    b.Property<int>("XPMaximo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("HeroiId");

                    b.ToTable("Habilidades");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Entities.Heroi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AndaresConquistados")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Antecedente")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<int>("Derrotas")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EstaAtivo")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Funcao")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Historia")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagemUrl")
                        .HasColumnType("TEXT");

                    b.Property<int>("Lealdade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Nivel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Personalidade")
                        .HasColumnType("TEXT");

                    b.Property<string>("Profissao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Raca")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Raridade")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Vitorias")
                        .HasColumnType("INTEGER");

                    b.Property<int>("XP")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Herois");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Entities.Inimigo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Habilidades")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Nivel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("TorreAndarId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TorreAndarId");

                    b.ToTable("Inimigo");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Entities.PersonagemTrabalhador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CidadeId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("HeroiId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("InicioTrabalho")
                        .HasColumnType("TEXT");

                    b.Property<string>("Profissao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TerminoTrabalho")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.ToTable("PersonagemTrabalhador");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Entities.TorreAndar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DificuldadeBoss")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Numero")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ObjetivoCumprido")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RecompensaQuantidade")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RecompensaTipo")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TemBoss")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Andares");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Entities.Usuario", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AndarMaisAlto")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("CidadeId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Cristais")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<int>("Fragmentos")
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("HeroisIds")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Moedas")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NivelConta")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PergaminhosSecretos")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UltimoLogin")
                        .HasColumnType("TEXT");

                    b.Property<int>("XP")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Entities.Auxiliares.HeroiAfinidadeElemental", b =>
                {
                    b.HasOne("LegendsAwaken.Domain.Entities.Heroi", "Heroi")
                        .WithMany("AfinidadeElemental")
                        .HasForeignKey("HeroiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Heroi");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Entities.Auxiliares.HeroiTag", b =>
                {
                    b.HasOne("LegendsAwaken.Domain.Entities.Heroi", "Heroi")
                        .WithMany("Tags")
                        .HasForeignKey("HeroiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Heroi");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Entities.Auxiliares.HeroiVinculo", b =>
                {
                    b.HasOne("LegendsAwaken.Domain.Entities.Heroi", "Heroi")
                        .WithMany("VinculosHeroicos")
                        .HasForeignKey("HeroiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Heroi");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Entities.Banner.BannerHistorico", b =>
                {
                    b.HasOne("LegendsAwaken.Domain.Entities.Usuario", null)
                        .WithMany("HistoricoBanners")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Entities.Banner.BannerProgresso", b =>
                {
                    b.HasOne("LegendsAwaken.Domain.Entities.Usuario", null)
                        .WithMany("ProgressoPorBanner")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Entities.Cidade", b =>
                {
                    b.OwnsOne("LegendsAwaken.Domain.Entities.Recursos", "Recursos", b1 =>
                        {
                            b1.Property<Guid>("CidadeId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Comida")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Madeira")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Ouro")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Pedra")
                                .HasColumnType("INTEGER");

                            b1.HasKey("CidadeId");

                            b1.ToTable("Cidades");

                            b1.WithOwner()
                                .HasForeignKey("CidadeId");
                        });

                    b.Navigation("Recursos")
                        .IsRequired();
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Entities.Construcao", b =>
                {
                    b.HasOne("LegendsAwaken.Domain.Entities.Cidade", null)
                        .WithMany("Construcoes")
                        .HasForeignKey("CidadeId");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Entities.Habilidade", b =>
                {
                    b.HasOne("LegendsAwaken.Domain.Entities.Heroi", null)
                        .WithMany("Habilidades")
                        .HasForeignKey("HeroiId");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Entities.Heroi", b =>
                {
                    b.OwnsOne("LegendsAwaken.Domain.Entities.Equipamentos", "Equipamentos", b1 =>
                        {
                            b1.Property<Guid>("HeroiId")
                                .HasColumnType("TEXT");

                            b1.PrimitiveCollection<string>("Acessorios")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Arma")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Armadura")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Id")
                                .HasColumnType("INTEGER");

                            b1.HasKey("HeroiId");

                            b1.ToTable("Herois");

                            b1.WithOwner()
                                .HasForeignKey("HeroiId");
                        });

                    b.OwnsOne("LegendsAwaken.Domain.Entities.Atributos", "Atributos", b1 =>
                        {
                            b1.Property<Guid>("HeroiId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Carisma")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Constituicao")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Destreza")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Forca")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Inteligencia")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Sabedoria")
                                .HasColumnType("INTEGER");

                            b1.HasKey("HeroiId");

                            b1.ToTable("Herois");

                            b1.WithOwner()
                                .HasForeignKey("HeroiId");
                        });

                    b.OwnsOne("LegendsAwaken.Domain.Entities.StatusCombate", "Status", b1 =>
                        {
                            b1.Property<Guid>("HeroiId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("ManaAtual")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("ManaMaxima")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("VidaAtual")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("VidaMaxima")
                                .HasColumnType("INTEGER");

                            b1.HasKey("HeroiId");

                            b1.ToTable("Herois");

                            b1.WithOwner()
                                .HasForeignKey("HeroiId");
                        });

                    b.OwnsOne("LegendsAwaken.Domain.Entities.Treinamento", "Treinamento", b1 =>
                        {
                            b1.Property<Guid>("HeroiId")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("Fim")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("Inicio")
                                .HasColumnType("TEXT");

                            b1.Property<string>("ResultadoEsperado")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Tipo")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("HeroiId");

                            b1.ToTable("Herois");

                            b1.WithOwner()
                                .HasForeignKey("HeroiId");
                        });

                    b.Navigation("Atributos")
                        .IsRequired();

                    b.Navigation("Equipamentos")
                        .IsRequired();

                    b.Navigation("Status")
                        .IsRequired();

                    b.Navigation("Treinamento");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Entities.Inimigo", b =>
                {
                    b.HasOne("LegendsAwaken.Domain.Entities.TorreAndar", null)
                        .WithMany("Inimigos")
                        .HasForeignKey("TorreAndarId");

                    b.OwnsOne("LegendsAwaken.Domain.Entities.Atributos", "Atributos", b1 =>
                        {
                            b1.Property<Guid>("InimigoId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Carisma")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Constituicao")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Destreza")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Forca")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Inteligencia")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Sabedoria")
                                .HasColumnType("INTEGER");

                            b1.HasKey("InimigoId");

                            b1.ToTable("Inimigo");

                            b1.WithOwner()
                                .HasForeignKey("InimigoId");
                        });

                    b.Navigation("Atributos")
                        .IsRequired();
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Entities.PersonagemTrabalhador", b =>
                {
                    b.HasOne("LegendsAwaken.Domain.Entities.Cidade", null)
                        .WithMany("Trabalhadores")
                        .HasForeignKey("CidadeId");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Entities.Cidade", b =>
                {
                    b.Navigation("Construcoes");

                    b.Navigation("Trabalhadores");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Entities.Heroi", b =>
                {
                    b.Navigation("AfinidadeElemental");

                    b.Navigation("Habilidades");

                    b.Navigation("Tags");

                    b.Navigation("VinculosHeroicos");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Entities.TorreAndar", b =>
                {
                    b.Navigation("Inimigos");
                });

            modelBuilder.Entity("LegendsAwaken.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("HistoricoBanners");

                    b.Navigation("ProgressoPorBanner");
                });
#pragma warning restore 612, 618
        }
    }
}
